PRE-SELECTION FOR TEST AUTOMATION MENTORING PARTICIPATION: JAVA, part 1
Задания к выполнению:
1.	Написать простейший калькулятор – консольное приложение(реализовать как минимум 4 операции: сложение, вычитание, умножение, деление) с вводом\выводом значений\результатов;

2.	Решить алгоритмическую задачу (варианты «загуглить» крайне не приветствуются).
Варианты ниже (вариант необходимо выбрать самостоятельно):
•	Transpose a matrix (Транспонировать матрицу)
•	Turn a matrix on 90 degrees clockwise (Повернуть матрицу на 90 градусов по часовой стрелке)
•	Multiply matrixes (Перемножить матрицы)
•	Find a return matrix (Найти обратную матрицу)
•	Find a matrix determinant (Найти определитель матрицы)
•	Find the second by length string in a list or array(Найти вторую по длинне строку в списке)
•	Sort list or array by string length (Отсортировать список по длине строк)
•	Sort list or array by count of vowels in string (Отсортировать список по количеству гласных в строке)
•	Sort list or array by count of consonants in string (Отсортировать список по количеству согласных в строке)
•	Change by places first and last letters in each second string of list or array (Поменять местами первую и последнюю буквы в каждой второй строке списка)            
•	Revert strings of list or array (Ревертировать строки списка)


PRE-SELECTION FOR TEST AUTOMATION MENTORING PARTICIPATION: JAVA, part 2

Task 1
Спроектировать объектную модель для заданной предметной области. Использовать (продемонстрировать умение работать): 
- классы (abstract классы – по возможности), 
- интерфейсы, 
- наследование, 
- полиморфизм, 
- инкапсуляция,
- коллекции. 
Каждый класс, метод и переменная должны иметь исчерпывающее смысл название и информативный состав. Необходимо точно продумать, какие классы необходимы для решения задачи. Наследование должно применяться только тогда, когда это имеет смысл. Классы должны быть грамотно разложены по пакетам. Работа с консолью или консольное меню должно быть минимальным (только необходимые данные для ввода, выводить только то, что просится в условии задачи). Задание представляет собой какую-то предметную область, в которой требуется выделить необходимую иерархию классов и реализовать ее с помощью ООП (используя наследование, если необходимо или реализовывая интерфейсы). В каждом классе должны быть поля и методы, которые вы посчитаете необходимыми. Программа должна создавать объекты различных классов в выделенной предметной области, объединять их в какой-то набор объектов (использовать коллекции). Как правило, задание требует выполнить какое-то действие над объектами в коллекции объектов по заданным критериям.

Варианты заданий (необходимо выбрать/реализовать один любой вариант):
1.	Цветочница. Определить иерархию цветов. Создать несколько объектов-цветов. Собрать букет с определением его стоимости. 
2.	Новогодний подарок. Определить иерархию конфет и прочих сладостей. Создать несколько объектов-конфет. Собрать детский подарок с определением его веса. Провести сортировку конфет в подарке на основе одного из параметров. Найти конфету в подарке, соответствующую заданному диапазону параметров.
3.	Домашние электроприборы. Определить иерархию электроприборов. Включить некоторые в розетку. Посчитать потребляемую мощность. Провести сортировку приборов в квартире на основе одного из параметров. Найти прибор в квартире, соответствующий заданному диапазону параметров.
4.	Шеф-повар. Определить иерархию овощей. Сделать салат. Посчитать калорийность. Провести сортировку овощей для салата на основе одного из параметров. Найти овощи в салате, соответствующие заданному диапазону параметров.
5.	Авиакомпания. Определить иерархию самолетов. Создать авиакомпанию. Посчитать общую вместимость и грузоподъемность. Провести сортировку самолетов компании по дальности полета. Найти самолет в компании, соответствующий заданному диапазону параметров.
6.	Таксопарк. Определить иерархию легковых автомобилей. Создать таксопарк. Посчитать стоимость автопарка. Провести сортировку автомобилей парка по расходу топлива. Найти автомобиль в компании, соответствующий заданному диапазону параметров.
7.	Игровая комната. Подготовить игровую комнату для детей разных возрастных групп. Игрушек должно быть фиксированное количество в пределах выделенной суммы денег. Должны встречаться игрушки родственных групп, например: маленькие, средние и большие машины, куклы, мячи, кубики. Провести сортировку игрушек в  комнате по одному из параметров. Найти игрушки в комнате, соответствующие заданному диапазону параметров.
8.	Туристические путевки. Сформировать набор предложений клиенту по выбору туристической путевки различного типа (отдых, экскурсии, лечение, шопинг, круиз и т.д.) для оптимального выбора. Учитывать возможность выбора транспорта, питания и числа дней. Реализовать выбор и сортировку путевок.
 
PRE-SELECTION FOR TEST AUTOMATION MENTORING PARTICIPATION: JAVA, part 3
Task 1
Для объектной модели, реализованной в задании 2.1, необходимо реализовать классы пользовательских исключений и организовать обработку возможных исключительных ситуаций, например, если элемент отсутствует в коллекции, если мы не можем удалить текущий элемент и т.д. Комментарии оставлять в классах исключений. Создать минимум 3 пользовательских исключения и использовать минимум 5 встроенных исключений.

Task 2
Дополнить сценарии, реализованные в задании 2.1 – добавить чтение данных из файла / запись данных в файл, используя I/O Streams.

PRE-SELECTION FOR TEST AUTOMATION MENTORING PARTICIPATION: JAVA, part 4
Task 1
Дополнить объектную модель, реализованную в рамках заданий 2.1, 3.1, 3.2. Добавить чтение данных из следующих источников:
- из базы данных (базу данных можно выбрать самостоятельно) с использованием jdbc – драйвера;
- из xml-файла или из json-файла (на выбор). 
	Все источники данных должны реализовывать общий интерфейс или наследовать общий абстрактный класс.
